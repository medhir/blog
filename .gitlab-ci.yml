stages: 
  - test
  - build
  - deploy

.setup-client-job: &setup-client-job
- cd client
- npm install

.setup-deploy-job: &setup-deploy-job
- apk add --no-cache curl
- curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
- chmod +x ./kubectl
- mv ./kubectl /usr/local/bin/kubectl

client-test:
  image: "node:8-alpine"
  stage: test
  before_script: 
    - *setup-client-job
  script: 
    - npm run test-ci

# See https://docs.gitlab.com/ee/ci/yaml/README.html#includetemplate for details
# Copied from https://gitlab.com/gitlab-org/gitlab/blob/master/lib/gitlab/ci/templates/Jobs/Build.gitlab-ci.yml
build-docker-image:
  stage: build
  image: "registry.gitlab.com/gitlab-org/cluster-integration/auto-build-image/master:stable"
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:stable-dind
  script:
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      else
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    - /build/build.sh
  only:
    - branches
    - tags
    
# deploy_review:
#   stage: deploy
#   script:
#     - kubectl apply -f kubernetes/blog/deployments/blog-review.yml
#     - kubectl apply -f kubernetes/blog/services/blog-review.yml
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     # url: https://$CI_ENVIRONMENT_SLUG.review.medhir.com
#     url: https://$CI_COMMIT_REF_NAME.review.medhir.com
#     on_stop: stop_review
#   only:
#     - branches
#   except:
#     - master

deploy_staging:
  before_script: 
    - *setup-deploy-job
  stage: deploy
  script:
    - kubectl apply -f kubernetes/blog/deployments/blog-staging.yml
    - kubectl apply -f kubernetes/blog/services/blog-staging.yml
  environment:
    name: staging
    url: https://stage.medhir.com
    on_stop: stop_staging
  only:
    - branches
  except:
    - master

deploy_prod:
  stage: deploy
  script:
    - echo "Deploy to production server"
  environment:
    name: production
    url: https://medhir.com
  when: manual
  only:
    - master

# stop_review:
#   stage: deploy
#   variables:
#     GIT_STRATEGY: none
#   script:
#     - echo "Remove review app"
#   when: manual
#   environment:
#     name: review/$CI_COMMIT_REF_NAME
#     action: stop

stop_staging:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - kubectl delete -f kubernetes/blog/services/blog-staging.yml
    - kubectl delete -f kubernetes/blog/deployments/blog-staging.yml
  when: manual
  environment:
    name: staging
    action: stop