// Code generated by mockery v1.0.0. DO NOT EDIT.

package auth

import fusionauth "github.com/FusionAuth/fusionauth-go-client/pkg/fusionauth"
import mock "github.com/stretchr/testify/mock"

// MockFusionAuthClient is an autogenerated mock type for the FusionAuthClient type
type MockFusionAuthClient struct {
	mock.Mock
}

// Login provides a mock function with given fields: request
func (_m *MockFusionAuthClient) Login(request fusionauth.LoginRequest) (*fusionauth.LoginResponse, *fusionauth.Errors, error) {
	ret := _m.Called(request)

	var r0 *fusionauth.LoginResponse
	if rf, ok := ret.Get(0).(func(fusionauth.LoginRequest) *fusionauth.LoginResponse); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*fusionauth.LoginResponse)
		}
	}

	var r1 *fusionauth.Errors
	if rf, ok := ret.Get(1).(func(fusionauth.LoginRequest) *fusionauth.Errors); ok {
		r1 = rf(request)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*fusionauth.Errors)
		}
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(fusionauth.LoginRequest) error); ok {
		r2 = rf(request)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// ValidateJWT provides a mock function with given fields: encodedJWT
func (_m *MockFusionAuthClient) ValidateJWT(encodedJWT string) (*fusionauth.ValidateResponse, error) {
	ret := _m.Called(encodedJWT)

	var r0 *fusionauth.ValidateResponse
	if rf, ok := ret.Get(0).(func(string) *fusionauth.ValidateResponse); ok {
		r0 = rf(encodedJWT)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*fusionauth.ValidateResponse)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(encodedJWT)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
