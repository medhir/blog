apiVersion: apps/v1
kind: Deployment

metadata:
  name: teamcity-server
  labels:
    app: teamcity-server
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: teamcity-server
  template:
    metadata:
      name: teamcity-server
      labels:
        app: teamcity-server
    spec:
      restartPolicy: Always
      containers:
        - name: teamcity-server
          image: jetbrains/teamcity-server
          ports:
            - containerPort: 8111
          volumeMounts:
            - mountPath: /data/teamcity_server/datadir
              name: teamcity-server-datadir
            - mountPath: /opt/teamcity/logs
              name: teamcity-server-logs
      volumes:
        - name: teamcity-server-datadir
          persistentVolumeClaim:
            claimName: teamcity-server-datadir
        - name: teamcity-server-logs
          persistentVolumeClaim:
            claimName: teamcity-server-logs
---
apiVersion: apps/v1
kind: Deployment

metadata:
  name: teamcity-agent
  labels:
    app: teamcity-agent
    tier: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: teamcity-agent
  template:
    metadata:
      name: teamcity-agent
      labels:
        app: teamcity-agent
    spec:
      restartPolicy: Always
      containers:
        - name: teamcity-agent
          image: jetbrains/teamcity-agent
          securityContext:
            privileged: true
          env:
            - name: SERVER_URL
              value: "http://10.4.13.150:8111"
            - name: DOCKER_IN_DOCKER
              value: "start"
          volumeMounts:
            - mountPath: /data/teamcity_agent/conf
              name: teamcity-agent-config
      volumes:
        - name: teamcity-agent-config
          persistentVolumeClaim:
            claimName: teamcity-agent-config
